import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.g4ap.llap"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '30.0.3'
}

dependencies {
    implementation ('com.tencent.qcloud:cosxml:5.6.0'){
        exclude group:'com.tencent.qcloud', module: 'mtaUtils' //disable mta upload for privacy
    }
    implementation 'androidx.core:core:1.3.0-rc01'
}


def releaseTime() {
    return new Date().format("yyyy-MM-dd HH:mm:ss", TimeZone.getTimeZone("GMT+08:00"))
}

task('setlogintext') {
    def manifestFile = file("src/main/res/values/strings.xml")
    def patternVersionNumber = Pattern.compile("<string name=\"hello_world\">.*</string>")
    def manifestText = manifestFile.getText()
    def matcherVersionNumber = patternVersionNumber.matcher(manifestText)
    def abc = matcherVersionNumber.find()
    println "set login string!!!!!!!!!!" + abc
    def manifestContent = matcherVersionNumber.replaceAll( "<string name=\"hello_world\">" + releaseTime() + "</string>")
    manifestFile.write(manifestContent)
}

tasks.whenTaskAdded { task ->
    if (task.name == 'generateReleaseBuildConfig' || task.name == 'generateDebugBuildConfig') {
        task.dependsOn 'setlogintext'
    }
}